@use "./colors" as c;
@use "sass:math";
@import url("https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;600;800&family=Space+Grotesk:wght@500&display=swap");
*,
*::before,
*::after,
input {
	margin: 0;
	padding: 0;
	font-family: "Nunito Sans", sans-serif;
	transition: background-color 0.4s ease-in-out;
}

@function rem($value) {
	@if math.is-unitless($value) {
		@return math.div($value, 16) + rem;
	} @else {
		@error 'Do not use units for the rem()';
	}
}
@mixin trans {
	animation: smooth 0.5s ease-in;
}

@keyframes smooth {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

$breakpoints: (
	medium: rem(560),
	large: rem(900),
);

@mixin breakpoints($size) {
	@media (min-width: map-get($breakpoints,$size)) {
		@content;
	}
}
@mixin breakpoints-down($size) {
	@media (max-width: map-get($breakpoints,$size)) {
		@content;
	}
}

.container {
	width: min(100% - rem(50), rem(1200));
	margin-inline: auto;
}

body {
	background-color: var(--Mode-Background);
	scroll-behavior: smooth;
}

header {
	background-color: var(--Mode-Elements);
	padding: rem(20) 0;
	box-shadow: 0 1rem 1rem -1.4rem rgba(0, 0, 0, 0.3);
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	z-index: 3;

	.container {
		display: flex;
		align-items: center;
		justify-content: space-between;
		h1 {
			font-size: clamp(rem(8), rem(10) + 1vw, rem(22));
			color: var(--Mode-color-text);
			font-weight: 800;
		}
		.theme-toggle {
			color: var(--Mode-color-text);
			font-weight: 300;
			font-size: rem(12);
			display: flex;
			align-items: center;
			justify-content: center;
			cursor: pointer;
			img {
				width: rem(20);
				height: rem(20);
				margin-right: rem(8);
			}
			span {
				font-weight: 300;
				font-size: clamp(rem(8), rem(10) + 1vw, rem(16));
			}
		}
	}
}

main {
	height: 100%;
	margin-top: rem(100);

	.filter-section {
		display: flex;
		align-items: center;
		justify-content: space-between;
		flex-direction: column;
		font-size: rem(17);
		gap: rem(40);
		@include breakpoints(medium) {
			flex-direction: row;
		}
		.filter-wrapper {
			position: relative;
			width: fit-content;
			box-shadow: 1rem 1rem 1rem -1rem rgba(0, 0, 0, 0.2);

			.filter-options {
				-webkit-tap-highlight-color: transparent;
				display: flex;
				flex-direction: column;
				background-color: var(--Mode-Elements);
				border-radius: rem(6);
				width: rem(230);
				margin-top: rem(6);
				display: flex;
				flex-direction: column;
				gap: rem(5);
				position: absolute;
				left: 0;
				opacity: 0;
				height: 0;
				visibility: hidden;
				overflow: hidden;
				transition: 0.2s ease-in-out;
				box-shadow: 1rem 1rem 1rem -1rem rgba(0, 0, 0, 0.2);
				cursor: pointer;
				a {
					text-decoration: none;
					user-select: none;
					color: var(--Mode-color-text);
					font-weight: 300;
					font-size: rem(15);
					padding-inline: rem(30);
					width: 100%;
					span {
						padding-block: rem(8);
						display: block;
					}

					&:hover,
					&:active {
						background-color: var(--Mode-Background2);
					}
				}
			}
			.filter {
				display: flex;
				justify-content: space-between;
				background-color: var(--Mode-Elements);
				width: rem(170);
				padding: rem(15) rem(30);
				color: var(--Mode-color-text);
				border-radius: rem(6);
				cursor: pointer;
				font-weight: 300;
				img {
					width: rem(26);
					height: rem(26);
				}
			}
			.show {
				visibility: visible;
				opacity: 1;
				transition: 0.2s ease-in-out;
				height: 200px;
			}
		}
		.input-div {
			width: 100%;
			position: relative;
			.before {
				position: absolute;
				left: rem(10);
				top: 50%;
				width: rem(20);
				height: rem(20);
				transform: translate(0%, -50%);
				background-size: cover;
				background-repeat: no-repeat;
				background-position: center;
				img {
					width: 100%;
					height: 100%;
				}
			}

			input {
				background-color: var(--Mode-Elements);
				color: var(--Mode-color-text);
				border: none;
				font-size: rem(16);
				font-weight: 300;
				height: rem(55);
				width: 90%;
				border-radius: rem(5);
				box-shadow: 1.2rem 1.1rem 1rem -1.36rem rgba(0, 0, 0, 0.4);
				padding-left: 2.2rem;
				max-width: rem(400);
				&::placeholder {
					color: var(--Mode-input);
				}
				&:focus {
					transition: 0.3s ease;
				}
			}
		}
	}
	.grid {
		margin-top: rem(30);
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(rem(250), 1fr));
		width: 100%;
		gap: rem(50);
		a:visited,
		:active {
			color: var(--Mode-color-text);
		}
		a {
			text-decoration: none;
		}
		.card {
			background-color: var(--Mode-Elements);
			color: var(--Mode-color-text);
			box-shadow: 1rem 1rem 1.5rem -1rem rgba(0, 0, 0, 0.1);
			border-radius: rem(7);
			overflow: hidden;
			max-width: rem(350);
			width: 100%;
			cursor: pointer;
			&:hover {
				transform: scale(1.009);
				transition: 0.3s ease;
				box-shadow: 1rem 1rem 1.5rem -1rem rgba(0, 0, 0, 0.205);
			}
			@include trans();
			@include breakpoints(large) {
				width: 100%;
				max-width: rem(250);
			}
			margin-inline: auto;
			.card--img {
				height: rem(150);
				img {
					width: 100%;
					height: 100%;
					object-fit: cover;
				}
			}
			.details {
				padding: rem(15) rem(15) rem(30) rem(25);
				h2 {
					font-size: rem(18);
					font-weight: 800;
					margin-bottom: 0.8rem;
				}
				p {
					margin-block: 0.1rem;
					font-weight: 600;
					span {
						font-weight: 300;
					}
				}
			}
		}
		.trans {
			opacity: 1;
			transition: 0.3s ease-in-out;
		}
	}
}

.error,
.loading {
	color: var(--Mode-color-text);
	font-size: clamp(rem(25), rem(20) + 1vw, rem(47));
	display: flex;
	align-items: center;
	justify-content: center;
	height: 45vh;
	font-weight: 800;
}
.load-more {
	width: rem(170);
	display: block;
	margin-block: rem(30);
	margin-inline: auto;
	padding: rem(10) rem(20);
	font-weight: 600;
	font-size: rem(20);
	background-color: var(--Mode-Elements);
	border-radius: rem(6);
	border: none;
	box-shadow: 1rem 1rem 1rem -1rem rgba(0, 0, 0, 0.2);
	color: var(--Mode-input);
	cursor: pointer;
	&:hover {
		border: 1px solid;
		background-color: var(--Mode-Background2);
		transition: all 0.3s ease;
		transform: scale(1.02);
	}
}

.wrapper {
	margin-top: rem(80);
	.back {
		margin: rem(25) 0 rem(40) 0;
		box-shadow: 1rem 1rem 1rem -1rem rgba(0, 0, 0, 0.253);
		cursor: pointer;
		width: rem(30);
		padding: rem(3) rem(20);
		background-color: var(--Mode-Elements);
		border-radius: rem(30);
		&:hover {
			opacity: 0.7;
			transition: 0.3s ease;
		}
	}
	.container {
		display: grid;
		grid-template-columns: 1fr 1fr;
		align-items: center;
		height: 100%;
		gap: rem(80);
		@include breakpoints-down(large) {
			grid-template-columns: 1fr;
			.left-container {
				max-height: rem(380);
				gap: rem(40);
			}
		}
		.left-container {
			width: 100%;
			height: rem(370);
			img {
				width: 100%;
				height: 100%;
			}
		}
		.right-container {
			height: 100%;
			display: flex;
			flex-direction: column;
			justify-content: center;
			margin-bottom: rem(32);
			.top {
				display: flex;
				align-items: center;
				gap: rem(50);
				flex-wrap: wrap;
				margin-bottom: rem(40);
				color: var(--Mode-color-text);
				ul li {
					list-style: none;
					display: flex;
					align-items: center;
					gap: 0.3rem;
				}
				.left {
					h2 {
						font-weight: 800;
						font-size: clamp(rem(8), rem(28) + 1vw, rem(30));
						margin-bottom: rem(20);
					}
					li {
						margin-block: 0.3rem;
					}
					li {
						font-weight: 400;
						font-size: clamp(rem(8), rem(17) + 1vw, rem(15));
						span {
							font-weight: 600;
							font-size: clamp(rem(8), rem(17) + 1vw, rem(15));
						}
					}
				}
				.right {
					ul li {
						display: flex;
						align-items: center;
						gap: 0.5rem;
						margin-block: 0.3rem;
						font-weight: 400;
						font-size: clamp(rem(8), rem(17) + 1vw, rem(15));
						span {
							font-weight: 600;
							font-size: clamp(rem(8), rem(17) + 1vw, rem(15));
						}
					}
				}
			}
			.bottom {
				color: var(--Mode-color-text);
				display: flex;
				align-items: center;
				span {
					font-weight: 600;
					font-size: clamp(rem(8), rem(17) + 1vw, rem(15));
				}
				ul {
					display: flex;
					flex-wrap: wrap;
					margin-left: rem(30);
					gap: rem(10);
					li {
						list-style: none;
						font-size: clamp(rem(8), rem(17) + 1vw, rem(15));
						box-shadow: 1rem 1rem 1rem -1rem rgba(0, 0, 0, 0.2);
						background-color: var(--Mode-Elements);
						padding: rem(5) rem(20);
						border-radius: rem(6);
						&:hover {
							cursor: pointer;
							opacity: 0.7;
							transition: 0.3s ease;
						}
					}
				}
			}
		}
	}
}

.main-error {
	display: grid;
	height: 100vh;
	text-align: center;
	place-content: center;
	a {
		text-decoration: none;
	}
	h1 {
		font-weight: 800;
	}
	p {
		font-weight: 400;
	}
	button {
		display: flex;
		align-items: center;
		justify-content: space-between;
		max-width: rem(300);
		margin-inline: auto;
		background-color: var(--Mode-Background);
		box-shadow: 1rem 1rem 1rem -1rem rgba(0, 0, 0, 0.2);
		outline: none;
		&:hover {
			background-color: rgba(0, 0, 0, 0.151);
			cursor: pointer;
		}
		padding: rem(10);
		margin-top: rem(30);
		p {
			font-size: rem(25);
			color: var(--Mode-color-text);
			font-weight: 400;
			margin-left: rem(20);
			text-transform: uppercase;
		}
	}
}

.me {
	width: rem(55);
	height: rem4(55);
	border-radius: 100%;

	&:hover {
		opacity: 0.7;
		transition: 0.4s ease;
	}
	@include breakpoints(large) {
		.me {
			width: rem(50);
			height: rem4(50);
			border-radius: 100%;

			&:hover {
				opacity: 0.7;
				transition: 0.4s ease;
			}
		}
	}
}
